syntax = "proto2";

import "adinfo.proto";
import "common.proto";
import "reginfo.proto";
import "taxation.proto";

package ofd.proto;

message ServiceRequest {
  message CommQuality {
    required uint32 avg_connect_time = 1;
    optional uint32 avg_ping = 2;
    optional uint32 loss_ratio = 3;
  }

  message OfflinePeriod {
    required DateTime begin_time = 1;
    required DateTime end_time = 2;
  }

  message SoftwareInformation {
    message ModuleInformation {
      message DeviceInformation {
        optional string manufacturer = 1;
        optional string model = 2;
        optional string firmware_version = 3;
      }

      required string name = 1;
      required string version = 2;
      optional string build_info = 3;
      optional DeviceInformation device_info = 4;
      repeated KeyValuePair extended_info = 5;
      optional string build_arch = 6;
    }

    repeated ModuleInformation module_infos = 1;
    optional string hardware_arch = 2;
    optional string os_family = 3;
    optional string os_version = 4;
    optional string os_extended_info = 5;
    optional string runtime_version = 6;
    optional uint32 partner_id = 7;
  }

  message RegInfo {
    required KkmRegInfo kkm = 1; // required с версии 200
    required OrgRegInfo org = 2; // required с версии 200
  }

  optional CommQuality comm_quality = 1;
  optional OfflinePeriod offline_period = 4;
  optional uint32 nomenclature_version = 5;
  repeated TicketAdInfo ticket_ad_infos = 6;
  optional bool get_reg_info  = 7;
  optional bool get_binded_taxation = 8;
  optional SoftwareInformation software_information = 11;
  required RegInfo reg_info = 12; // required с версии 200
  repeated KeyValuePair auxiliary = 60;
}

message ServiceResponse {
  message RegInfo {
    required KkmRegInfo kkm = 1; // required с версии 200
    optional PosRegInfo pos = 2;
    required OrgRegInfo org = 3; // required с версии 200
  }

  message LastDocumentInfo {
    required uint32 fr_shift_number = 1;
    required uint64 printed_document_number = 2;
  }

  repeated TicketAd ticket_ads = 1;
  required RegInfo reg_info = 2; // required с версии 200
  optional BindedTaxation binded_taxation = 3;
  optional LastDocumentInfo last_document_info = 4; // добавлено в версии 200
  repeated KeyValuePair auxiliary = 30;
}

message KeyValuePair {
  required string key = 1;
  optional string value = 2;
}
