syntax = "proto2";

import "common.proto";
import "service.proto";
import "taxation.proto";

package ofd.proto;

enum OperationTypeEnum {
  OPERATION_BUY = 0;
  OPERATION_BUY_RETURN = 1;
  OPERATION_SELL = 2;
  OPERATION_SELL_RETURN = 3;
}

enum PaymentTypeEnum {
  PAYMENT_CASH = 0;
  PAYMENT_CARD = 1;
  PAYMENT_MOBILE = 4; // добавлено в версии 201
}

enum DomainTypeEnum {
  DOMAIN_TRADING = 0;
  DOMAIN_SERVICES = 1;
  DOMAIN_GASOIL = 2;
  DOMAIN_HOTELS = 3;
  DOMAIN_TAXI = 4;
  DOMAIN_PARKING = 5;
}

message TicketRequest {
  message Tax {
    required TaxTypeEnum type = 1;
    optional TaxationTypeEnum taxation_type = 2; // optional с версии 200
    required uint32 percent = 3;
    required Money sum = 4;
    required bool is_in_total_sum = 5;
  }

  message Modifier {
    optional string name = 1;
    required Money sum = 2;
    repeated Tax taxes = 3;
	repeated KeyValuePair auxiliary = 4; // добавлено в версии 200
  }

  message Item {
    message Commodity {
      optional uint64 code = 1; // uint32 с версии 200
      optional string name = 2;
      required string section_code = 3;
      required uint32 quantity = 4;
      required Money price = 5;
      required Money sum = 6;
      repeated Tax taxes = 7;
      optional string excise_stamp = 8;
      optional string physical_label = 10; // добавлено в версии 200
      optional string product_id = 11; // добавлено в версии 200
      optional string barcode = 12; // добавлено в версии 200
      required string measure_unit_code = 13; // добавлено в версии 201
      repeated KeyValuePair auxiliary = 9; // добавлено в версии 200
    }

    message StornoCommodity {
      optional string name = 1;
      required string section_code = 2;
      required uint32 quantity = 3;
      required Money price = 4;
      required Money sum = 5;
      repeated Tax taxes = 6;
      optional string excise_stamp = 7;
      optional string physical_label = 9; // добавлено в версии 200
      optional string product_id = 10; // добавлено в версии 200
      optional string barcode = 11; // добавлено в версии 200
      required string measure_unit_code = 12; // добавлено в версии 201
      repeated KeyValuePair auxiliary = 8; // добавлено в версии 200
    }

    enum ItemTypeEnum {
      ITEM_TYPE_COMMODITY = 1;
      ITEM_TYPE_STORNO_COMMODITY = 2;
      ITEM_TYPE_MARKUP = 3;
      ITEM_TYPE_STORNO_MARKUP = 4;
      ITEM_TYPE_DISCOUNT = 5;
      ITEM_TYPE_STORNO_DISCOUNT = 6;
    }

    required ItemTypeEnum type = 1;
    optional Commodity commodity = 2; // required если type == ITEM_TYPE_COMMODITY
    optional StornoCommodity storno_commodity = 3; // required при type == ITEM_TYPE_STORNO_COMMODITY
    optional Modifier markup = 4; // required при type == ITEM_TYPE_MARKUP
    optional Modifier storno_markup = 5; // required при type == ITEM_TYPE_STORNO_MARKUP
    optional Modifier discount = 6; // required при type == ITEM_TYPE_DISCOUNT
    optional Modifier storno_discount = 7; // required при type == ITEM_TYPE_STORNO_DISCOUNT
  }

  message Domain {
    message Services {
      required string account_number = 1;
    }

    message GasOil {
      optional string correction_number = 1;
      optional Money correction_sum = 2;
      optional string card_number = 3;
    }

    message Taxi {
      required string car_number = 1;
      required bool is_order = 2;
      required Money current_fee = 3;
    }

    message Parking {
      required DateTime begin_time = 1;
      required DateTime end_time = 2;
    }

    required DomainTypeEnum type = 1;
    optional Services services = 2;
    optional GasOil gasoil = 3;
    optional Taxi taxi = 4;
    optional Parking parking  = 5;
  }

  message ExtensionOptions {
    optional string customer_email = 1;
    optional string customer_phone = 2;
    repeated KeyValuePair auxiliary = 3; // добавлено в версии 200
    optional string customer_iin_or_bin = 4; // добавлено в версии 201
  }

  message Payment {
    required PaymentTypeEnum type = 1;
    required Money sum = 2;
  }

  message Amounts {
    required Money total = 1;
    optional Money taken = 2;
    optional Money change = 3;
    optional Modifier markup = 4;
    optional Modifier discount = 5;
  }

  required OperationTypeEnum operation = 1;
  required DateTime date_time = 2;
  required Operator operator = 3;
  required Domain domain = 4;
  repeated Item items = 5;
  repeated Payment payments = 6;
  repeated Tax taxes = 7;
  required Amounts amounts = 8;
  optional ExtensionOptions extension_options = 9;
  optional uint32 offline_ticket_number = 10;
  optional uint64 printed_document_number = 16; // uint64 с версии 200
  optional string printed_ticket = 12;
  optional uint32 fr_shift_number = 14;
}

message TicketResponse {
  required string ticket_number = 1;
  optional bytes qr_code = 2;
}
